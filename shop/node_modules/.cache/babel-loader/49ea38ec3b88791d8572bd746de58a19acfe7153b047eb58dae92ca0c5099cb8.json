{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ridwan\\\\Desktop\\\\FS102 Project\\\\shop\\\\src\\\\FeaturedPorducts.jsx\",\n  _s = $RefreshSig$();\n// // import React from 'react'\n// // import { useState, useEffect } from 'react'\n\n// // const FeaturedPorducts = () => {\n\n// //     // const randomNumber = Math.floor(Math.random()*135)\n// //     // console.log(randomNumber)\n\n// //     const [featured, setFeatured] = useState([])\n// //     const [list, setList] = useState([])\n// //     const [filterArray, setFilteredArray] = useState([])\n\n// //     useEffect(() => {\n// //         let array = [];\n\n// //         for (let index = 0; index < 4; index++) {\n// //             const randomNumber = Math.ceil(Math.random() * 21);\n// //             array.push(randomNumber);\n// //         }\n\n// //         setFeatured(array);\n\n// //         const listOfItems = async () => {\n// //             const data = await fetch('https://fakestoreapi.com/products')\n// //             const response = await data.json()\n// //             setList(response)\n\n// //         }\n\n// //         listOfItems()\n\n// //         let x\n// //         let abc = []\n// //         for (x of featured) {\n// //             console.log(x)\n\n// //             abc = list.filter(item => {\n// //                 return item.id === x\n// //             })\n// //             setFilteredArray(abc)\n// //         }\n\n// //         console.log(filterArray)\n\n// //     }, []); // Empty dependency array ensures the effect runs once after the initial render\n// //     console.log(list)\n\n// //     // this is for the random number array\n// //     console.log(featured);\n\n// //     // let x\n// //     // let filterArray = []\n// //     // for(x of featured){\n// //     //     console.log(x)\n\n// //     //     filterArray = list.filter(item=>{\n// //     //         return item.id === x\n// //     //     })\n// //     // }\n\n// //     // console.log(filterArray)\n\n// //     return (\n// //         <div className='container mt-5'>\n// //             <h1 className='text-center'>Our This Month's Featured Products</h1>\n\n// //         </div>\n// //     )\n// // }\n\n// // export default FeaturedPorducts\n\n// import React, { useState, useEffect } from 'react';\n\n// const FeaturedProducts = () => {\n//     const [list, setList] = useState([]);\n//     const [featured, setFeatured] = useState([]);\n//     const [filteredIndices, setFilteredIndices] = useState([]);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n\n//                 const data = await fetch('https://fakestoreapi.com/products');\n//                 const response = await data.json();\n//                 setList(response);\n\n//             } catch (error) {\n//                 console.error(\"Error fetching data:\", error);\n\n//             }\n\n//         };\n\n//         fetchData();\n\n//         let array = []\n//         for (let index = 0; index < 4; index++) {\n//             const randomNumber = Math.floor(Math.random() * 21);\n//             array.push(randomNumber);\n//         }\n\n//         setFeatured(array)\n\n//         let filteredIndicesArray = list\n//             .map((item, index) => (featured.includes(item.id) ? index : null))\n//             .filter(index => index !== null);\n\n//         setFilteredIndices(filteredIndicesArray)\n\n//     }, []); // Empty dependency array ensures the effect runs once after the initial render\n\n//     console.log(list)\n//     console.log(featured)\n//     console.log(filteredIndices)\n\n//     // return (\n//     //     <div className='container mt-5'>\n//     //         <h1 className='text-center'>Our This Month's Featured Products</h1>\n//     //         <ul>\n//     //             {filteredIndices.map(index => (\n//     //                 <li key={index}>{list[index].title}</li>\n//     //             ))}\n//     //         </ul>\n//     //     </div>\n//     // );\n\n//     return (\n//         <div className='container mt-5'>\n//             {filteredIndices.length === 0 ? (\n//                 <p>Loading...</p>\n//             ) : (\n//                 <>\n//                     <h1 className='text-center'>Our This Month's Featured Products</h1>\n//                     <ul>\n//                         {filteredIndices.map(index => (\n//                             <li key={index}>{list[index].title}</li>\n//                         ))}\n//                     </ul>\n//                 </>\n//             )}\n//         </div>\n//     );\n\n// };\n\n// export default FeaturedProducts;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeaturedProducts = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [filteredIndices, setFilteredIndices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Loading state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetch('https://fakestoreapi.com/products');\n        const response = await data.json();\n        setList(response);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setIsLoading(false); // Set loading state to false after data fetching completes\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs once after the initial render\n\n  useEffect(() => {\n    const filteredIndicesArray = list.map((item, index) => filteredIndices.includes(index) ? index : null).filter(index => index !== null);\n    setFilteredIndices(filteredIndicesArray);\n  }, [filteredIndices, list]); // Run the effect whenever filteredIndices or list changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Our This Month's Featured Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredIndices.map(index => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: list[index].title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(FeaturedProducts, \"2I0xrji8Ov30YNuBcYgRQ2DbepM=\");\n_c = FeaturedProducts;\nexport default FeaturedProducts;\nvar _c;\n$RefreshReg$(_c, \"FeaturedProducts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FeaturedProducts","_s","list","setList","filteredIndices","setFilteredIndices","isLoading","setIsLoading","fetchData","data","fetch","response","json","error","console","filteredIndicesArray","map","item","index","includes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["C:/Users/ridwan/Desktop/FS102 Project/shop/src/FeaturedPorducts.jsx"],"sourcesContent":["// // import React from 'react'\r\n// // import { useState, useEffect } from 'react'\r\n\r\n// // const FeaturedPorducts = () => {\r\n\r\n// //     // const randomNumber = Math.floor(Math.random()*135)\r\n// //     // console.log(randomNumber)\r\n\r\n// //     const [featured, setFeatured] = useState([])\r\n// //     const [list, setList] = useState([])\r\n// //     const [filterArray, setFilteredArray] = useState([])\r\n\r\n// //     useEffect(() => {\r\n// //         let array = [];\r\n\r\n// //         for (let index = 0; index < 4; index++) {\r\n// //             const randomNumber = Math.ceil(Math.random() * 21);\r\n// //             array.push(randomNumber);\r\n// //         }\r\n\r\n// //         setFeatured(array);\r\n\r\n// //         const listOfItems = async () => {\r\n// //             const data = await fetch('https://fakestoreapi.com/products')\r\n// //             const response = await data.json()\r\n// //             setList(response)\r\n\r\n// //         }\r\n\r\n// //         listOfItems()\r\n\r\n// //         let x\r\n// //         let abc = []\r\n// //         for (x of featured) {\r\n// //             console.log(x)\r\n\r\n// //             abc = list.filter(item => {\r\n// //                 return item.id === x\r\n// //             })\r\n// //             setFilteredArray(abc)\r\n// //         }\r\n\r\n// //         console.log(filterArray)\r\n\r\n\r\n\r\n// //     }, []); // Empty dependency array ensures the effect runs once after the initial render\r\n// //     console.log(list)\r\n\r\n// //     // this is for the random number array\r\n// //     console.log(featured);\r\n\r\n// //     // let x\r\n// //     // let filterArray = []\r\n// //     // for(x of featured){\r\n// //     //     console.log(x)\r\n\r\n// //     //     filterArray = list.filter(item=>{\r\n// //     //         return item.id === x\r\n// //     //     })\r\n// //     // }\r\n\r\n// //     // console.log(filterArray)\r\n\r\n\r\n\r\n\r\n// //     return (\r\n// //         <div className='container mt-5'>\r\n// //             <h1 className='text-center'>Our This Month's Featured Products</h1>\r\n\r\n\r\n\r\n// //         </div>\r\n// //     )\r\n// // }\r\n\r\n// // export default FeaturedPorducts\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const FeaturedProducts = () => {\r\n//     const [list, setList] = useState([]);\r\n//     const [featured, setFeatured] = useState([]);\r\n//     const [filteredIndices, setFilteredIndices] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n\r\n//                 const data = await fetch('https://fakestoreapi.com/products');\r\n//                 const response = await data.json();\r\n//                 setList(response);\r\n\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching data:\", error);\r\n\r\n//             }\r\n\r\n//         };\r\n\r\n//         fetchData();\r\n\r\n//         let array = []\r\n//         for (let index = 0; index < 4; index++) {\r\n//             const randomNumber = Math.floor(Math.random() * 21);\r\n//             array.push(randomNumber);\r\n//         }\r\n\r\n//         setFeatured(array)\r\n\r\n//         let filteredIndicesArray = list\r\n//             .map((item, index) => (featured.includes(item.id) ? index : null))\r\n//             .filter(index => index !== null);\r\n\r\n//         setFilteredIndices(filteredIndicesArray)\r\n\r\n//     }, []); // Empty dependency array ensures the effect runs once after the initial render\r\n\r\n//     console.log(list)\r\n//     console.log(featured)\r\n//     console.log(filteredIndices)\r\n\r\n\r\n\r\n\r\n\r\n//     // return (\r\n//     //     <div className='container mt-5'>\r\n//     //         <h1 className='text-center'>Our This Month's Featured Products</h1>\r\n//     //         <ul>\r\n//     //             {filteredIndices.map(index => (\r\n//     //                 <li key={index}>{list[index].title}</li>\r\n//     //             ))}\r\n//     //         </ul>\r\n//     //     </div>\r\n//     // );\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             {filteredIndices.length === 0 ? (\r\n//                 <p>Loading...</p>\r\n//             ) : (\r\n//                 <>\r\n//                     <h1 className='text-center'>Our This Month's Featured Products</h1>\r\n//                     <ul>\r\n//                         {filteredIndices.map(index => (\r\n//                             <li key={index}>{list[index].title}</li>\r\n//                         ))}\r\n//                     </ul>\r\n//                 </>\r\n//             )}\r\n//         </div>\r\n//     );\r\n\r\n// };\r\n\r\n// export default FeaturedProducts;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst FeaturedProducts = () => {\r\n    const [list, setList] = useState([]);\r\n    const [filteredIndices, setFilteredIndices] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true); // Loading state\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await fetch('https://fakestoreapi.com/products');\r\n                const response = await data.json();\r\n                setList(response);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            } finally {\r\n                setIsLoading(false); // Set loading state to false after data fetching completes\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Empty dependency array ensures the effect runs once after the initial render\r\n\r\n    useEffect(() => {\r\n        const filteredIndicesArray = list\r\n            .map((item, index) => (filteredIndices.includes(index) ? index : null))\r\n            .filter(index => index !== null);\r\n        setFilteredIndices(filteredIndicesArray);\r\n    }, [filteredIndices, list]); // Run the effect whenever filteredIndices or list changes\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <>\r\n                    <h1 className='text-center'>Our This Month's Featured Products</h1>\r\n                    <ul>\r\n                        {filteredIndices.map(index => (\r\n                            <li key={index}>{list[index].title}</li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeaturedProducts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}