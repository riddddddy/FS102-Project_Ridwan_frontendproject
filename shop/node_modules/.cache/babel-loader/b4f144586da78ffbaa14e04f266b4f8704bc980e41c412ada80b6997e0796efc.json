{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ridwan\\\\Desktop\\\\FS102 Project\\\\shop\\\\src\\\\FeaturedPorducts.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import { useState, useEffect } from 'react'\n\n// const FeaturedPorducts = () => {\n\n//     // const randomNumber = Math.floor(Math.random()*135)\n//     // console.log(randomNumber)\n\n//     const [featured, setFeatured] = useState([])\n//     const [list, setList] = useState([])\n//     const [filterArray, setFilteredArray] = useState([])\n\n//     useEffect(() => {\n//         let array = [];\n\n//         for (let index = 0; index < 4; index++) {\n//             const randomNumber = Math.ceil(Math.random() * 21);\n//             array.push(randomNumber);\n//         }\n\n//         setFeatured(array);\n\n//         const listOfItems = async () => {\n//             const data = await fetch('https://fakestoreapi.com/products')\n//             const response = await data.json()\n//             setList(response)\n\n//         }\n\n//         listOfItems()\n\n//         let x\n//         let abc = []\n//         for (x of featured) {\n//             console.log(x)\n\n//             abc = list.filter(item => {\n//                 return item.id === x\n//             })\n//             setFilteredArray(abc)\n//         }\n\n//         console.log(filterArray)\n\n//     }, []); // Empty dependency array ensures the effect runs once after the initial render\n//     console.log(list)\n\n//     // this is for the random number array\n//     console.log(featured);\n\n//     // let x\n//     // let filterArray = []\n//     // for(x of featured){\n//     //     console.log(x)\n\n//     //     filterArray = list.filter(item=>{\n//     //         return item.id === x\n//     //     })\n//     // }\n\n//     // console.log(filterArray)\n\n//     return (\n//         <div className='container mt-5'>\n//             <h1 className='text-center'>Our This Month's Featured Products</h1>\n\n//         </div>\n//     )\n// }\n\n// export default FeaturedPorducts\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeaturedProducts = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [filteredIndices, setFilteredIndices] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetch('https://fakestoreapi.com/products');\n        const response = await data.json();\n        setList(response);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    let array = [];\n    for (let index = 0; index < 4; index++) {\n      const randomNumber = Math.floor(Math.random() * 21);\n      array.push(randomNumber);\n    }\n    setFeatured(array);\n  }, []); // Empty dependency array ensures the effect runs once after the initial render\n\n  useEffect(() => {\n    let filteredIndicesArray = list.map((item, index) => featured.includes(item.id) ? item.id : null).filter(item => item.id !== null);\n    setFilteredIndices(filteredIndicesArray);\n  }, [list]);\n  console.log(list);\n  console.log(featured);\n  console.log(filteredIndices);\n\n  // return (\n  //     <div className='container mt-5'>\n  //         <h1 className='text-center'>Our This Month's Featured Products</h1>\n  //         <ul>\n  //             {filteredIndices.map(index => (\n  //                 <li key={index}>{list[index].title}</li>\n  //             ))}\n  //         </ul>\n  //     </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: filteredIndices.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Our This Month's Featured Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredIndices.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: list[item.id].title\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(FeaturedProducts, \"DOQoYF6ovCRcxPHqLYQUKmD60B0=\");\n_c = FeaturedProducts;\nexport default FeaturedProducts;\nvar _c;\n$RefreshReg$(_c, \"FeaturedProducts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FeaturedProducts","_s","list","setList","featured","setFeatured","filteredIndices","setFilteredIndices","fetchData","data","fetch","response","json","error","console","array","index","randomNumber","Math","floor","random","push","filteredIndicesArray","map","item","includes","id","filter","log","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["C:/Users/ridwan/Desktop/FS102 Project/shop/src/FeaturedPorducts.jsx"],"sourcesContent":["// import React from 'react'\r\n// import { useState, useEffect } from 'react'\r\n\r\n// const FeaturedPorducts = () => {\r\n\r\n//     // const randomNumber = Math.floor(Math.random()*135)\r\n//     // console.log(randomNumber)\r\n\r\n//     const [featured, setFeatured] = useState([])\r\n//     const [list, setList] = useState([])\r\n//     const [filterArray, setFilteredArray] = useState([])\r\n\r\n//     useEffect(() => {\r\n//         let array = [];\r\n\r\n//         for (let index = 0; index < 4; index++) {\r\n//             const randomNumber = Math.ceil(Math.random() * 21);\r\n//             array.push(randomNumber);\r\n//         }\r\n\r\n//         setFeatured(array);\r\n\r\n//         const listOfItems = async () => {\r\n//             const data = await fetch('https://fakestoreapi.com/products')\r\n//             const response = await data.json()\r\n//             setList(response)\r\n\r\n//         }\r\n\r\n//         listOfItems()\r\n\r\n//         let x\r\n//         let abc = []\r\n//         for (x of featured) {\r\n//             console.log(x)\r\n\r\n//             abc = list.filter(item => {\r\n//                 return item.id === x\r\n//             })\r\n//             setFilteredArray(abc)\r\n//         }\r\n\r\n//         console.log(filterArray)\r\n\r\n\r\n\r\n//     }, []); // Empty dependency array ensures the effect runs once after the initial render\r\n//     console.log(list)\r\n\r\n//     // this is for the random number array\r\n//     console.log(featured);\r\n\r\n//     // let x\r\n//     // let filterArray = []\r\n//     // for(x of featured){\r\n//     //     console.log(x)\r\n\r\n//     //     filterArray = list.filter(item=>{\r\n//     //         return item.id === x\r\n//     //     })\r\n//     // }\r\n\r\n//     // console.log(filterArray)\r\n\r\n\r\n\r\n\r\n//     return (\r\n//         <div className='container mt-5'>\r\n//             <h1 className='text-center'>Our This Month's Featured Products</h1>\r\n\r\n\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default FeaturedPorducts\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst FeaturedProducts = () => {\r\n    const [list, setList] = useState([]);\r\n    const [featured, setFeatured] = useState([]);\r\n    const [filteredIndices, setFilteredIndices] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n\r\n                const data = await fetch('https://fakestoreapi.com/products');\r\n                const response = await data.json();\r\n                setList(response);\r\n\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n\r\n            }\r\n\r\n        };\r\n\r\n        fetchData();\r\n\r\n        let array = []\r\n        for (let index = 0; index < 4; index++) {\r\n            const randomNumber = Math.floor(Math.random() * 21);\r\n            array.push(randomNumber);\r\n        }\r\n\r\n        setFeatured(array)\r\n\r\n    }, []); // Empty dependency array ensures the effect runs once after the initial render\r\n\r\n    useEffect(()=>{\r\n        let filteredIndicesArray = list\r\n            .map((item, index) => (featured.includes(item.id) ? item.id : null))\r\n            .filter(item => item.id !== null);\r\n\r\n        setFilteredIndices(filteredIndicesArray)\r\n    },[list])\r\n\r\n\r\n    console.log(list)\r\n    console.log(featured)\r\n    console.log(filteredIndices)\r\n\r\n\r\n\r\n\r\n\r\n    // return (\r\n    //     <div className='container mt-5'>\r\n    //         <h1 className='text-center'>Our This Month's Featured Products</h1>\r\n    //         <ul>\r\n    //             {filteredIndices.map(index => (\r\n    //                 <li key={index}>{list[index].title}</li>\r\n    //             ))}\r\n    //         </ul>\r\n    //     </div>\r\n    // );\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            {filteredIndices.length === 0 ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <>\r\n                    <h1 className='text-center'>Our This Month's Featured Products</h1>\r\n                    <ul>\r\n                        {filteredIndices.map(item => (\r\n                            <li key={item.id}>{list[item.id].title}</li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default FeaturedProducts;\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QAEA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QAC7D,MAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;QAClCT,OAAO,CAACQ,QAAQ,CAAC;MAErB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAEhD;IAEJ,CAAC;IAEDL,SAAS,CAAC,CAAC;IAEX,IAAIO,KAAK,GAAG,EAAE;IACd,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAE,EAAE;MACpC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;MACnDL,KAAK,CAACM,IAAI,CAACJ,YAAY,CAAC;IAC5B;IAEAZ,WAAW,CAACU,KAAK,CAAC;EAEtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERpB,SAAS,CAAC,MAAI;IACV,IAAI2B,oBAAoB,GAAGpB,IAAI,CAC1BqB,GAAG,CAAC,CAACC,IAAI,EAAER,KAAK,KAAMZ,QAAQ,CAACqB,QAAQ,CAACD,IAAI,CAACE,EAAE,CAAC,GAAGF,IAAI,CAACE,EAAE,GAAG,IAAK,CAAC,CACnEC,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAK,IAAI,CAAC;IAErCnB,kBAAkB,CAACe,oBAAoB,CAAC;EAC5C,CAAC,EAAC,CAACpB,IAAI,CAAC,CAAC;EAGTY,OAAO,CAACc,GAAG,CAAC1B,IAAI,CAAC;EACjBY,OAAO,CAACc,GAAG,CAACxB,QAAQ,CAAC;EACrBU,OAAO,CAACc,GAAG,CAACtB,eAAe,CAAC;;EAM5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIT,OAAA;IAAKgC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BxB,eAAe,CAACyB,MAAM,KAAK,CAAC,gBACzBlC,OAAA;MAAAiC,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBtC,OAAA,CAAAE,SAAA;MAAA+B,QAAA,gBACIjC,OAAA;QAAIgC,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAkC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEtC,OAAA;QAAAiC,QAAA,EACKxB,eAAe,CAACiB,GAAG,CAACC,IAAI,iBACrB3B,OAAA;UAAAiC,QAAA,EAAmB5B,IAAI,CAACsB,IAAI,CAACE,EAAE,CAAC,CAACU;QAAK,GAA7BZ,IAAI,CAACE,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2B,CAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,eACP;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd,CAAC;AAAClC,EAAA,CA7EID,gBAAgB;AAAAqC,EAAA,GAAhBrC,gBAAgB;AA+EtB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}